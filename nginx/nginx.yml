apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    user nginx;
    worker_processes  1;

    events {
      worker_connections  10240;
    }
    env POD_NAMESPACE;
    env NODE_NAME;
    http {
      lua_shared_dict my_dict 10m;
      server {
          listen       80;
          server_name  localhost;


          location / {
              set_by_lua $namespace 'return os.getenv("POD_NAMESPACE")';
              set_by_lua $node_name 'return os.getenv("NODE_NAME")';
              default_type text/html;
              return 200 '<html><body><h1>Pod Information</h1>
              <p><h1>Pod: $hostname</h1> </p>
              <p><h1>Node: $node_name</h1></p>
              <p><h1>Namespace: $namespace</h1> </p>
              <p><h1>IP: $remote_addr</h1></p>
              </body></html>';

        }
      }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 3
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: fabiocicerchia/nginx-lua
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        ports:
        - containerPort: 80

        volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
              readOnly: true
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf
          items:
            - key: nginx.conf
              path: nginx.conf

---
apiVersion: v1
kind: Service
metadata:
  name: my-nginx-svc
  labels:
    app: nginx
spec:
  type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: nginx
